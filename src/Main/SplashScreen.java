package Main;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Kurt Pascua
 */
public class SplashScreen extends javax.swing.JFrame {

    /**
     * Creates new form SplashScreen
     */
    public SplashScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        progressbar = new javax.swing.JProgressBar();
        counter = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        setSize(new java.awt.Dimension(758, 426));

        jPanel1.setBackground(new java.awt.Color(51, 80, 49));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        progressbar.setBackground(new java.awt.Color(25, 40, 24));
        progressbar.setForeground(new java.awt.Color(217, 231, 217));
        progressbar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel1.add(progressbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 640, 20));

        counter.setBackground(new java.awt.Color(64, 101, 62));
        counter.setFont(new java.awt.Font("Perpetua Titling MT", 1, 9)); // NOI18N
        counter.setForeground(new java.awt.Color(255, 255, 255));
        counter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading. <br>Initializing User Interface</html>");
        counter.setToolTipText("");
        jPanel1.add(counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 150, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/HUMSS ART MUSEUM.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(680, 420));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SplashScreen sc = new SplashScreen();
        

        /* Create and display the form */
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                sc.setVisible(true);
            }
        });
        Landing_Page lp = new Landing_Page();
        try {
            for (int i = 0; i <= 100; i++) {
                Thread.sleep(40);
                sc.progressbar.setValue(i);
                if (i < 1) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading. <br>Connecting to Database</html>");
                } else if (i < 10) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading.. <br>Connecting to Database</html>");
                } else if (i < 25) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading... <br>Connecting to Database</html>");
                } else if (i < 35) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading. <br>Fetching Data </html>");
                } else if (i < 45) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading.. <br>Fetching Data</html>");
                } else if (i < 55) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading... <br>Fetching Data</html>");
                } else if (i < 65) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading. <br>Initializing User Interface</html>");
                } else if (i < 75) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading.. <br>Initializing User Interface</html>");
                } else if (i < 85) {
                    sc.counter.setText("<html>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Loading... <br>Initializing User Interface</html>");
                } else if (i < 95){
                    sc.counter.setText("<html>Loading. <br>Finalizing</html>");
                } else if (i < 100) {
                    sc.counter.setText("<html>Loading.. <br>Finalizing</html>");
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        
        
        new SplashScreen().setVisible(false);
        lp.setVisible(true);
        
        sc.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel counter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar progressbar;
    // End of variables declaration//GEN-END:variables
}
