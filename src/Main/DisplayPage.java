
package Main;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.ByteArrayInputStream;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
public class DisplayPage extends javax.swing.JFrame {

    public DisplayPage() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/assets/HUMSS_LOGO.png")));
        displayDataFromDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataContainer = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        PageTitle = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dataContainer.setBackground(new java.awt.Color(51, 80, 49));
        dataContainer.setAutoscrolls(true);
        dataContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnExit.setBackground(new java.awt.Color(41, 65, 40));
        btnExit.setForeground(new java.awt.Color(193, 216, 191));
        btnExit.setText("BACK");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        dataContainer.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 20));

        PageTitle.setBackground(new java.awt.Color(254, 251, 234));
        PageTitle.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        PageTitle.setForeground(new java.awt.Color(254, 251, 234));
        PageTitle.setText("ART MUSEUM");
        dataContainer.add(PageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));
        dataContainer.add(jScrollBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 0, -1, 580));

        jScrollPane1.setViewportView(dataContainer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 580));

        setSize(new java.awt.Dimension(766, 588));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        Landing_Page jf1 = new Landing_Page();
        jf1.show();

        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void displayDataFromDatabase() {
        try {
            Connection conn = ConDB.getConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM users");

            int row = 0; // Variable to track the row number
            int yIncrement = 240; // Increment value for y-coordinate

            while (rs.next()) {
                String title = rs.getString("User_Art");
                String name = rs.getString("Artist_name");
                String year = rs.getString("School_year");
                String email = rs.getString("Email_address");
                String description = rs.getString("User_Art_Desc");
                byte[] imageBytes = rs.getBytes("image_file");

                // Display image
                if (imageBytes != null) {
                    ByteArrayInputStream bis = new ByteArrayInputStream(imageBytes);
                    Image image = ImageIO.read(bis);
                    image = image.getScaledInstance(340, 190, Image.SCALE_SMOOTH);

                    // Create JLabel for image
                    JLabel imageLabel = new JLabel(new ImageIcon(image));
                    dataContainer.add(imageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100 + row * yIncrement, 340, 190));

                    row++; // Increment row number
                }

                // Create JLabel for title
                JLabel titleLabel = new JLabel(title);
                titleLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
                titleLabel.setForeground(Color.WHITE);
                dataContainer.add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70 + row * yIncrement, 220, 30));

                // Create JLabel for artist name
                JLabel nameLabel = new JLabel(name);
                nameLabel.setFont(new Font("Times New Roman", Font.PLAIN, 18));
                nameLabel.setForeground(Color.WHITE);
                nameLabel.setBackground(new Color(51, 80, 49));
                dataContainer.add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100 + row * yIncrement, 220, 30));

                // Create JLabel for school year
                JLabel yearLabel = new JLabel(year);
                yearLabel.setFont(new Font("Times New Roman", Font.PLAIN, 18));
                yearLabel.setForeground(Color.WHITE);
                dataContainer.add(yearLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130 + row * yIncrement, 220, 30));

                // Create JLabel for email address
                JLabel emailLabel = new JLabel(email);
                emailLabel.setFont(new Font("Times New Roman", Font.PLAIN, 18));
                emailLabel.setForeground(Color.WHITE);
                emailLabel.setBackground(new Color(51, 80, 49));
                dataContainer.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160 + row * yIncrement, 220, 30));
                
// Create JTextArea for art description
                JTextArea descriptionField = new JTextArea(description);
                descriptionField.setFont(new Font("Times New Roman", Font.PLAIN, 18));
                descriptionField.setForeground(Color.WHITE);
                descriptionField.setBackground(new Color(51, 80, 49));
                descriptionField.setLineWrap(true);
                descriptionField.setWrapStyleWord(true);
                descriptionField.setEditable(false); // Set the JTextArea as non-editable
                
// Create JScrollPane and add the JTextArea to it
                JScrollPane scrollPane = new JScrollPane(descriptionField);
                scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

// set size 
                scrollPane.setPreferredSize(new Dimension(620, 100));

// Add the scroll pane to the container
                dataContainer.add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190 + row * yIncrement, 620, 100));

                row++; // Increment row number
            }

            rs.close();
            stmt.close();
            conn.close();
        } catch (Exception e) {
            System.err.println(e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PageTitle;
    private javax.swing.JButton btnExit;
    private javax.swing.JPanel dataContainer;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
